<?php

namespace Payutc\OnyxBundle\Entity;

use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository implements UserProviderInterface
{
	public function loadUserByUsername($username)
    {
        $user = null;

        $qb = $this->_em->createQueryBuilder();

        $qb->select('u')
            ->from('PayutcOnyxBundle:User', 'u')
            ->where('u.email = :email')
            ->setParameter('email', $username)
        ;

        try {
            $user = $qb->getQuery()->getSingleResult();
        }
        catch (NoResultException $e) {
            throw new UsernameNotFoundException(sprintf('Ce nom d\'utilisateur est inconnu : "%s".', $username), 0, $e);
        }

        return $user;
    }

    public function refreshUser(UserInterface $user)
    {
        if (!$this->supportsClass(get_class($user))) {
            throw new UnsupportedUserException(sprintf('Instances of "%s" are not supported.', $user));
        }

        return $this->find($user->getId());
    }

    public function supportsClass($class)
    {
        return ($class === $this->getEntityName() || is_subclass_of($class, $this->getEntityName()));
    }
}